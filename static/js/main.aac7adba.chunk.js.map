{"version":3,"sources":["static/images/logo.svg","components/atoms/error/styles.module.css","pages/details-page/styles.module.css","components/templates/details-template/styles.module.css","pages/edit-page/styles.module.css","components/templates/edit-template/styles.module.css","store/system/reducers.ts","store/character/reducers.ts","utils/functions/handleLocalStorage.ts","store/index.ts","store/system/types.ts","store/character/types.ts","utils/functions/generateApiKey.ts","components/molecules/search-bar/index.tsx","components/templates/home-template/index.tsx","components/molecules/card/index.tsx","components/organisms/card-list/index.tsx","components/atoms/loader/index.tsx","components/atoms/error/index.tsx","pages/home-page/index.tsx","utils/hooks/useQuery.ts","utils/hooks/useCharactersFetch.ts","store/character/actions.ts","utils/functions/processApiData.ts","components/templates/details-template/index.tsx","components/molecules/series-card/index.tsx","components/organisms/series-card-list/index.tsx","components/molecules/details-body/index.tsx","components/molecules/details-header/index.tsx","pages/details-page/index.tsx","utils/hooks/useSeriesFetch.ts","components/templates/edit-template/index.tsx","components/molecules/edit-header/index.tsx","components/molecules/edit-fields/index.tsx","pages/edit-page/index.tsx","App.tsx","index.tsx","components/molecules/details-body/styles.module.css","components/molecules/series-card/styles.module.css","components/molecules/edit-fields/styles.module.css","components/molecules/search-bar/styles.module.css","components/molecules/card/styles.module.css","components/atoms/loader/styles.module.css","components/molecules/details-header/styles.module.css","components/templates/home-template/styles.module.css","components/organisms/card-list/styles.module.css","components/organisms/series-card-list/styles.module.css","components/molecules/edit-header/styles.module.css"],"names":["module","exports","initialState","page","limit","rootReducer","combineReducers","system","state","action","type","payload","characters","newState","index","findIndex","item","id","characterId","series","localState","serializedState","localStorage","getItem","JSON","parse","err","loadStateFromLocalStorage","store","createStore","subscribe","throttle","stringify","setItem","saveStateToLocalStorage","getState","generateApiKey","ts","Date","now","process","md5","SearchBar","props","doSearch","searchTerm","useState","searchString","setSearchString","AppBar","data-testid","className","styles","searchBar","Toolbar","container","logo","src","alt","searchContainer","InputBase","input","placeholder","defaultValue","inputProps","onKeyPress","event","key","handleKeyPress","onChange","currentTarget","value","IconButton","aria-label","onClick","preventDefault","HomeTemplate","charactersCardList","navbar","content","Card","title","image","ariaLabel","classProps","card","component","CardActionArea","actionArea","CardMedia","CardContent","Typography","name","variant","CardList","cards","testId","length","map","noCharacters","Loader","loader","dot","Error","error","HomePage","query","URLSearchParams","useLocation","search","history","useHistory","get","String","fetch","reload","status","result","setResult","dispatch","useDispatch","useEffect","mounted","queryNameStartsWith","axios","then","response","data","results","description","thumbnail","path","extension","catch","useCharactersFetch","useSelector","character","push","rest","slugify","DetailsTemplate","detailsHeader","detailsBody","SeriesCard","isExpanded","setIsExpanded","header","img","expand","onExpand","aria-expanded","Collapse","in","timeout","unmountOnExit","details","SeriesCardList","seriesArray","noSeries","DetailsBody","isLoading","infoGroup","detailTitle","detailInfo","text","DetailsHeader","handleNavigateBack","handleEdit","style","backgroundImage","navigateBefore","editAttributes","DetailsPage","params","useParams","parseInt","find","e","useSeriesFetch","to","EditTemplate","editHero","inputFields","EditHeader","EditFields","fields","setName","setImage","setDescription","isOpenDialog","setIsOpenDialog","handleClose","TextField","disabled","label","target","multiline","rows","Button","button","editCharacter","Dialog","onClose","aria-labelledby","open","DialogTitle","DialogActions","autoFocus","color","EditPage","App","exact","ReactDOM","render","StylesProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.aac7adba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.288f7061.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"styles_error__2ugKv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"styles_page__2WJtD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"styles_content__349yX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"styles_page__LRN7O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"styles_content__2ApMr\"};","import { SystemState, SystemActionTypes, UPDATE_PAGE } from './types'\n\nconst initialState: SystemState = {\n  page: 1,\n  limit: 48,\n}\n\nexport function systemReducer(state = initialState, action: SystemActionTypes): SystemState {\n  switch (action.type) {\n    case UPDATE_PAGE: {\n      return {\n        ...state,\n        page: action.payload,\n      }\n    }\n    default:\n      return state\n  }\n}\n","import {\n  CharacterState,\n  CharacterActionTypes,\n  FETCH_CHARACTERS,\n  LOAD_MORE_CHARACTERS,\n  FETCH_CHARACTER_SERIES,\n  EDIT_CHARACTER,\n} from './types'\n\nconst initialState: CharacterState = []\n\nexport function charactersReducer(\n  state = initialState,\n  action: CharacterActionTypes,\n): CharacterState {\n  switch (action.type) {\n    case FETCH_CHARACTERS:\n      return action.payload\n\n    case LOAD_MORE_CHARACTERS:\n      return [...state, ...action.payload]\n\n    case FETCH_CHARACTER_SERIES: {\n      let newState = [...state]\n      let index = newState.findIndex(item => item.id === action.payload.characterId)\n      newState[index].series = [...action.payload.series]\n      return newState\n    }\n\n    case EDIT_CHARACTER: {\n      let newState = [...state]\n      let index = newState.findIndex(item => item.id === action.payload.id)\n      action.payload.series = newState[index].series\n      newState[index] = { ...newState[index], ...action.payload }\n      return newState\n    }\n\n    default:\n      return state\n  }\n}\n","export const loadStateFromLocalStorage = () => {\n  try {\n    const serializedState = localStorage.getItem('state')\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch (err) {\n    return undefined\n  }\n}\n\nexport const saveStateToLocalStorage = (state: any) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem('state', serializedState)\n  } catch {}\n}\n","import { combineReducers, createStore } from 'redux'\nimport throttle from 'lodash/throttle'\n\nimport { systemReducer } from 'src/store/system/reducers'\nimport { charactersReducer } from 'src/store/character/reducers'\nimport {\n  loadStateFromLocalStorage,\n  saveStateToLocalStorage,\n} from 'src/utils/functions/handleLocalStorage'\n\nconst rootReducer = combineReducers({\n  system: systemReducer,\n  characters: charactersReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nconst localState = loadStateFromLocalStorage()\nconst store = createStore(rootReducer, localState)\n\nstore.subscribe(\n  throttle(() => {\n    saveStateToLocalStorage(store.getState())\n  }, 1000),\n)\n\nexport default store\n","export type SystemState = {\n  page: number\n  limit: number\n}\n\n/* System Actions Constants */\nexport const UPDATE_PAGE = 'UPDATE_PAGE'\n\n/* System Actions Shapes */\ntype UpdatePageAction = {\n  type: typeof UPDATE_PAGE\n  payload: number\n}\n\nexport type SystemActionTypes = UpdatePageAction\n","export type Series = {\n  id: number\n  title: string\n  image: string\n}\n\nexport type Character = {\n  id: number\n  name: string\n  image: string\n  description: string\n  series: Series[]\n}\n\nexport type CharacterState = Character[]\n\n/* Character Actions Constants */\nexport const FETCH_CHARACTERS = 'FETCH_CHARACTERS'\nexport const LOAD_MORE_CHARACTERS = 'LOAD_MORE_CHARACTERS'\nexport const FETCH_CHARACTER_SERIES = 'FETCH_CHARACTER_SERIES'\nexport const EDIT_CHARACTER = 'EDIT_CHARACTER'\n\n/* Character Actions Shapes */\ntype FetchCharactersAction = {\n  type: typeof FETCH_CHARACTERS\n  payload: Character[]\n}\n\ntype LoadMoreCharacters = {\n  type: typeof LOAD_MORE_CHARACTERS\n  payload: Character[]\n}\n\ntype FetchCaracterSeriesPayload = {\n  characterId: number\n  series: Series[]\n}\n\ntype FetchCharacterSeriesAction = {\n  type: typeof FETCH_CHARACTER_SERIES\n  payload: FetchCaracterSeriesPayload\n}\n\ntype EditCharacterAction = {\n  type: typeof EDIT_CHARACTER\n  payload: Character\n}\n\nexport type CharacterActionTypes =\n  | FetchCharactersAction\n  | LoadMoreCharacters\n  | FetchCharacterSeriesAction\n  | EditCharacterAction\n","import md5 from 'md5'\n\nexport const generateApiKey = () => {\n  if (process.env.REACT_APP_API_KEY_PUBLIC && process.env.REACT_APP_API_KEY_PRIVATE) {\n    let ts = Date.now()\n    return `ts=${ts}&apikey=${process.env.REACT_APP_API_KEY_PUBLIC}&hash=${md5(\n      ts + process.env.REACT_APP_API_KEY_PRIVATE + process.env.REACT_APP_API_KEY_PUBLIC,\n    )}`\n  }\n}\n","import React, { useState } from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\n\nimport styles from './styles.module.css'\nimport logo from 'src/static/images/logo.svg'\n\ntype SearchBarProps = {\n  doSearch: (character: string) => void\n  searchTerm: string\n}\n\nconst SearchBar = (props: SearchBarProps) => {\n  const { doSearch, searchTerm } = props\n  const [searchString, setSearchString] = useState(searchTerm)\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    if (event.key === 'Enter') doSearch(searchString)\n  }\n\n  return (\n    <AppBar data-testid=\"search-bar\" className={styles.searchBar}>\n      <Toolbar className={styles.container}>\n        <img className={styles.logo} src={logo} alt=\"Logo Marvel\" />\n        <div className={styles.searchContainer}>\n          <InputBase\n            className={styles.input}\n            placeholder=\"Pesquisar personagem...\"\n            defaultValue={searchString}\n            inputProps={{\n              onKeyPress: event => handleKeyPress(event),\n            }}\n            onChange={event => setSearchString(event.currentTarget.value)}\n          />\n          <IconButton\n            aria-label=\"pesquisar\"\n            data-testid=\"search-button\"\n            onClick={event => {\n              event.preventDefault()\n              doSearch(searchString)\n            }}>\n            <SearchIcon />\n          </IconButton>\n        </div>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default SearchBar\n","import React, { ReactNode } from 'react'\n\nimport styles from './styles.module.css'\n\ntype HomeTemplateProps = {\n  charactersCardList: ReactNode\n}\n\nconst HomeTemplate = (props: HomeTemplateProps) => {\n  const { charactersCardList } = props\n  return (\n    <>\n      <div className={styles.navbar} />\n      <section data-testid=\"cards-container\" className={styles.content}>\n        {charactersCardList}\n      </section>\n    </>\n  )\n}\n\nexport default HomeTemplate\n","import React from 'react'\nimport MUICard from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\n\nimport styles from './styles.module.css'\n\ntype CardProps = {\n  className?: string\n  title: string\n  image: string\n  ariaLabel: string\n  onClick: () => void\n}\n\nconst Card = (props: CardProps) => {\n  const { className = '', title, image, ariaLabel, onClick } = props\n  const classProps = `${styles.card} ${className}`\n\n  return (\n    <MUICard component=\"li\" className={classProps}>\n      <CardActionArea className={styles.actionArea} onClick={onClick}>\n        <CardMedia\n          className={styles.image}\n          image={image}\n          title={ariaLabel}\n          aria-label={ariaLabel}\n          component=\"div\"\n        />\n        <CardContent className={styles.content}>\n          <Typography className={styles.name} variant=\"caption\" component=\"h2\">\n            {title}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </MUICard>\n  )\n}\n\nexport default Card\n","import React, { PropsWithChildren } from 'react'\n\nimport styles from './styles.module.css'\n\nimport Card from 'src/components/molecules/card'\nimport { Typography } from '@material-ui/core'\n\ntype CardType = {\n  id: number\n  title: string\n  image: string\n}\n\ntype CardListProps<T> = {\n  className?: string\n  cards: T[]\n  ariaLabel: string\n  testId: string\n  onClick: (id: number, title: string) => void\n}\n\nfunction CardList<T extends CardType>(props: PropsWithChildren<CardListProps<T>>) {\n  const { className = '', cards, ariaLabel, testId, onClick } = props\n  const classProps: string = `${styles.content} ${className}`\n\n  return (\n    <ul data-testid={`cards-list-${testId}`} className={classProps} aria-label={ariaLabel}>\n      {cards.length ? (\n        cards.map(card => (\n          <Card\n            key={card.id}\n            title={card.title}\n            image={card.image}\n            ariaLabel=\"card\"\n            onClick={() => onClick(card.id, card.title)}\n          />\n        ))\n      ) : (\n        <Typography className={styles.noCharacters} component=\"li\" variant=\"caption\">\n          Nenhum personagem encontrado.\n        </Typography>\n      )}\n    </ul>\n  )\n}\n\nexport default CardList\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport styles from './styles.module.css'\n\nconst Loader = () => {\n  const classProps: string = `${styles.loader}`\n  return (\n    <div data-testid=\"loader\" className={classProps}>\n      <Typography component=\"h1\" variant=\"h5\">\n        Carregando\n        <span className={styles.dot}>.</span>\n        <span className={styles.dot}>.</span>\n        <span className={styles.dot}>.</span>\n      </Typography>\n    </div>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport styles from './styles.module.css'\n\nconst Error = () => {\n  return (\n    <div data-testid=\"error-message\" className={styles.error}>\n      <Typography component=\"h1\" variant=\"h5\">\n        Algo deu errado!\n      </Typography>\n    </div>\n  )\n}\n\nexport default Error\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { slugify } from 'voca'\n\nimport { RootState } from 'src/store'\nimport { useQuery } from 'src/utils/hooks/useQuery'\nimport { useCharactersFetch } from 'src/utils/hooks/useCharactersFetch'\nimport SearchBar from 'src/components/molecules/search-bar'\nimport HomeTemplate from 'src/components/templates/home-template'\nimport CardList from 'src/components/organisms/card-list'\nimport Loader from 'src/components/atoms/loader'\nimport Error from 'src/components/atoms/error'\n\nconst HomePage = () => {\n  const query = useQuery()\n  const history = useHistory()\n  const search = query.get('search') !== null ? String(query.get('search')) : ''\n  const reload = query.get('reload') === null || query.get('reload') === 'true'\n  const fetch = useCharactersFetch(search, reload)\n  const characters = useSelector((state: RootState) => state.characters)\n\n  const handleDoSearch = (character: string) => {\n    history.push(`/?search=${character}`)\n  }\n\n  const handleCardClick = (id: number, name: string) => {\n    history.push(`/characters/${id}/${slugify(name)}/details`)\n  }\n\n  return (\n    <>\n      <SearchBar searchTerm={search} doSearch={handleDoSearch} />\n      {fetch.status === 'loading' && <Loader />}\n      {fetch.status === 'loaded' && (\n        <HomeTemplate\n          charactersCardList={\n            <CardList\n              cards={characters.map(({ name: title, ...rest }) => ({ title, ...rest }))}\n              onClick={handleCardClick}\n              testId=\"characters\"\n              ariaLabel=\"conjunto de cards de personagens\"\n            />\n          }\n        />\n      )}\n      {fetch.status === 'error' && <Error />}\n    </>\n  )\n}\n\nexport default HomePage\n","import { useLocation } from 'react-router-dom'\n\nexport const useQuery = () => new URLSearchParams(useLocation().search)\n","import { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport axios from 'axios'\n\nimport { fetchCharacters } from 'src/store/character/actions'\nimport { Fetch } from 'src/utils/types/fetch'\nimport { generateApiKey } from 'src/utils/functions/generateApiKey'\nimport { processCharactersApiResult } from 'src/utils/functions/processApiData'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport const useCharactersFetch = (search: string, reload: boolean) => {\n  const [result, setResult] = useState<Fetch>({\n    status: 'init',\n  })\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    let mounted = true\n    if (reload) {\n      const queryNameStartsWith = search ? `nameStartsWith=${search}` : ''\n\n      if (mounted) setResult({ status: 'loading' })\n      axios\n        .get(`${API_URL}characters?${queryNameStartsWith}&limit=48&${generateApiKey()}`)\n        .then((response: any) => {\n          if (mounted) {\n            dispatch(fetchCharacters(processCharactersApiResult(response.data.data)))\n            setResult({ status: 'loaded' })\n          }\n        })\n        .catch((error: any) => {\n          if (mounted) setResult({ status: 'error', error })\n        })\n    } else {\n      if (mounted) setResult({ status: 'loaded' })\n    }\n    return () => {\n      mounted = false\n    }\n  }, [dispatch, search, reload])\n\n  return result\n}\n","import {\n  Character,\n  Series,\n  FETCH_CHARACTERS,\n  LOAD_MORE_CHARACTERS,\n  FETCH_CHARACTER_SERIES,\n  EDIT_CHARACTER,\n  CharacterActionTypes,\n} from './types'\n\nexport function fetchCharacters(characters: Character[]): CharacterActionTypes {\n  return {\n    type: FETCH_CHARACTERS,\n    payload: characters,\n  }\n}\n\nexport function loadMoreCharacters(characters: Character[]): CharacterActionTypes {\n  return {\n    type: LOAD_MORE_CHARACTERS,\n    payload: characters,\n  }\n}\n\nexport function fetchCharacterSeries(characterId: number, series: Series[]): CharacterActionTypes {\n  return {\n    type: FETCH_CHARACTER_SERIES,\n    payload: { characterId, series },\n  }\n}\n\nexport function editCharacter(character: Character): CharacterActionTypes {\n  return {\n    type: EDIT_CHARACTER,\n    payload: character,\n  }\n}\n","export const processCharactersApiResult = (data: any) => {\n  return data.results.map((item: any) => {\n    return {\n      id: item.id,\n      name: item.name,\n      description: item.description,\n      image: `${item.thumbnail.path}.${item.thumbnail.extension}`,\n      series: [],\n    }\n  })\n}\n\nexport const processSeriesApiResult = (data: any) => {\n  return data.results.map((item: any) => {\n    return {\n      id: item.id,\n      title: item.title,\n      image: `${item.thumbnail.path}.${item.thumbnail.extension}`,\n    }\n  })\n}\n","import React, { ReactNode } from 'react'\n\nimport styles from './styles.module.css'\n\ntype DetailsTemplateProps = {\n  detailsHeader: ReactNode\n  detailsBody: ReactNode\n}\n\nconst DetailsTemplate = (props: DetailsTemplateProps) => {\n  const { detailsHeader, detailsBody } = props\n  return (\n    <section className={styles.content}>\n      {detailsHeader}\n      {detailsBody}\n    </section>\n  )\n}\n\nexport default DetailsTemplate\n","import React, { useState } from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Collapse from '@material-ui/core/Collapse'\n\nimport styles from './styles.module.css'\n\nimport { Series } from 'src/store/character/types'\n\ntype SeriesCardProps = {\n  className?: string\n  series: Series\n}\n\nconst SeriesCard = (props: SeriesCardProps) => {\n  const { className = '', series } = props\n  const classProps: string = `${className}`\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const handleExpand = () => {\n    setIsExpanded(!isExpanded)\n  }\n\n  return (\n    <Card component=\"li\" className={classProps}>\n      <div className={styles.header}>\n        <CardMedia\n          className={styles.img}\n          image={series.image}\n          title={`Imagem da série ${series.title}`}\n        />\n        <Typography className={styles.title} variant=\"caption\" component=\"h2\">\n          {series.title}\n        </Typography>\n        <IconButton\n          className={`${styles.expand} ${isExpanded ? styles.onExpand : ''}`}\n          aria-expanded={isExpanded}\n          aria-label=\"Mostrar mais\"\n          data-testid=\"expand-more-button\"\n          onClick={handleExpand}>\n          <ExpandMoreIcon />\n        </IconButton>\n      </div>\n      <Collapse in={isExpanded} timeout=\"auto\" unmountOnExit>\n        <CardContent className={styles.details}>\n          <Typography>Detalhes sobre a série</Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default SeriesCard\n","import React from 'react'\n\nimport styles from './styles.module.css'\n\nimport { Series } from 'src/store/character/types'\nimport SeriesCard from 'src/components/molecules/series-card'\nimport { Typography } from '@material-ui/core'\n\ntype SeriesCardListProps = {\n  className?: string\n  seriesArray: Series[]\n}\n\nconst SeriesCardList = (props: SeriesCardListProps) => {\n  const { className = '', seriesArray } = props\n  const classProps: string = `${styles.content} ${className}`\n\n  return (\n    <ul\n      className={classProps}\n      aria-label=\"conjunto de cards de séries\"\n      data-testid=\"card-list-series\">\n      {seriesArray.length ? (\n        seriesArray.map(series => <SeriesCard key={series.id} series={series} />)\n      ) : (\n        <Typography className={styles.noSeries} component=\"li\" variant=\"caption\">\n          Nenhuma série encontrada\n        </Typography>\n      )}\n    </ul>\n  )\n}\n\nexport default SeriesCardList\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport styles from './styles.module.css'\nimport { Character } from 'src/store/character/types'\nimport SeriesCardList from 'src/components/organisms/series-card-list'\nimport Loader from 'src/components/atoms/loader'\n\ntype DetailsBodyProps = {\n  character: Character\n  isLoading: boolean\n}\n\nconst DetailsBody = (props: DetailsBodyProps) => {\n  const { character, isLoading } = props\n  return (\n    <dl className={styles.content}>\n      <div className={styles.infoGroup}>\n        <Typography\n          id=\"label-nome\"\n          className={styles.detailTitle}\n          variant=\"subtitle1\"\n          component=\"dt\">\n          Nome:\n        </Typography>\n        <Typography className={styles.detailInfo} variant=\"subtitle1\" component=\"dd\">\n          {character.name}\n        </Typography>\n      </div>\n      {character.description !== '' && (\n        <div className={styles.infoGroup}>\n          <Typography className={styles.detailTitle} variant=\"body2\" component=\"dt\">\n            Descrição:\n          </Typography>\n          <Typography className={styles.detailInfo} variant=\"body2\" component=\"dd\">\n            {character.description}\n          </Typography>\n        </div>\n      )}\n\n      <Typography className={styles.text} variant=\"body2\" component=\"dt\">{`Séries:`}</Typography>\n      <dd>{isLoading ? <Loader /> : <SeriesCardList seriesArray={character.series} />}</dd>\n    </dl>\n  )\n}\n\nexport default DetailsBody\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport NavigateBefore from '@material-ui/icons/NavigateBefore'\nimport Edit from '@material-ui/icons/Edit'\n\nimport styles from './styles.module.css'\nimport { Character } from 'src/store/character/types'\n\ntype DetailsHeaderProps = {\n  character: Character\n  handleNavigateBack: () => void\n  handleEdit: () => void\n}\n\nconst DetailsHeader = (props: DetailsHeaderProps) => {\n  const { character, handleNavigateBack, handleEdit } = props\n\n  return (\n    <div\n      className={styles.header}\n      style={{ backgroundImage: `url(${character.image})` }}\n      aria-label={`Imagem do personagem ${character.name}`}>\n      <IconButton\n        className={styles.navigateBefore}\n        onClick={handleNavigateBack}\n        data-testid=\"navigate-back-button\"\n        aria-label=\"voltar para página inicial\">\n        <NavigateBefore />\n      </IconButton>\n      <IconButton\n        className={styles.editAttributes}\n        onClick={handleEdit}\n        data-testid=\"edit-button\"\n        aria-label=\"editar personagem\">\n        <Edit />\n      </IconButton>\n    </div>\n  )\n}\n\nexport default DetailsHeader\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory, useParams, Redirect } from 'react-router-dom'\nimport { RootState } from 'src/store'\n\nimport styles from './styles.module.css'\n\nimport DetailsTemplate from 'src/components/templates/details-template'\nimport DetailsBody from 'src/components/molecules/details-body'\nimport DetailsHeader from 'src/components/molecules/details-header'\nimport { useSeriesFetch } from 'src/utils/hooks/useSeriesFetch'\nimport Error from 'src/components/atoms/error'\nimport { slugify } from 'voca'\n\ntype DetailsPageParams = {\n  characterId: string\n}\n\nconst DetailsPage = () => {\n  const history = useHistory()\n  const params = useParams<DetailsPageParams>()\n  const characterId = parseInt(params.characterId)\n  const character = useSelector((state: RootState) =>\n    state.characters.find(e => e.id === characterId),\n  )\n  const fetch = useSeriesFetch(character)\n\n  if (!character) return <Redirect to=\"/\" />\n\n  const handleNavigateBack = () => {\n    history.push('/?reload=false')\n  }\n\n  const handleEdit = (id: number, name: string) => {\n    history.push(`/characters/${id}/${slugify(name)}/edit`)\n  }\n\n  return (\n    <div className={styles.page}>\n      {fetch.status === 'loading' && (\n        <DetailsTemplate\n          detailsHeader={\n            <DetailsHeader\n              handleNavigateBack={handleNavigateBack}\n              handleEdit={() => handleEdit(character.id, character.name)}\n              character={character}\n            />\n          }\n          detailsBody={<DetailsBody isLoading={true} character={character} />}\n        />\n      )}\n      {fetch.status === 'loaded' && (\n        <DetailsTemplate\n          detailsHeader={\n            <DetailsHeader\n              handleNavigateBack={handleNavigateBack}\n              handleEdit={() => handleEdit(character.id, character.name)}\n              character={character}\n            />\n          }\n          detailsBody={<DetailsBody isLoading={false} character={character} />}\n        />\n      )}\n      {fetch.status === 'error' && <Error />}\n    </div>\n  )\n}\n\nexport default DetailsPage\n","import { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport axios from 'axios'\n\nimport { fetchCharacterSeries } from 'src/store/character/actions'\nimport { Fetch } from 'src/utils/types/fetch'\nimport { generateApiKey } from 'src/utils/functions/generateApiKey'\nimport { processSeriesApiResult } from 'src/utils/functions/processApiData'\nimport { Character } from 'src/store/character/types'\n\nconst API_URL = process.env.REACT_APP_API_URL\n\nexport const useSeriesFetch = (character: Character | undefined) => {\n  const dispatch = useDispatch()\n  const [result, setResult] = useState<Fetch>({\n    status: 'init',\n  })\n\n  useEffect(() => {\n    let mounted = true\n    if (character && character.series.length === 0) {\n      if (mounted) setResult({ status: 'loading' })\n      axios\n        .get(`${API_URL}characters/${character.id}/series?limit=20&${generateApiKey()}`)\n        .then(response => {\n          if (mounted) {\n            dispatch(fetchCharacterSeries(character.id, processSeriesApiResult(response.data.data)))\n            setResult({ status: 'loaded' })\n          }\n        })\n        .catch(error => {\n          if (mounted) setResult({ status: 'error', error })\n        })\n    } else {\n      if (mounted) setResult({ status: 'loaded' })\n    }\n    return () => {\n      mounted = false\n    }\n  }, [character, dispatch])\n\n  return result\n}\n","import React, { ReactNode } from 'react'\n\nimport styles from './styles.module.css'\n\ntype EditTemplateProps = {\n  editHero: ReactNode\n  inputFields: ReactNode\n}\n\nconst EditTemplate = (props: EditTemplateProps) => {\n  const { editHero, inputFields } = props\n  return (\n    <section className={styles.content}>\n      {editHero}\n      {inputFields}\n    </section>\n  )\n}\n\nexport default EditTemplate\n","import React from 'react'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport NavigateBefore from '@material-ui/icons/NavigateBefore'\n\nimport styles from './styles.module.css'\nimport { Character } from 'src/store/character/types'\n\ntype EditHeaderProps = {\n  className?: string\n  character: Character\n  handleNavigateBack: () => void\n}\n\nconst EditHeader = (props: EditHeaderProps) => {\n  const { className = '', character, handleNavigateBack } = props\n  const classProps: string = `${styles.header} ${className}`\n\n  return (\n    <div\n      className={classProps}\n      style={{ backgroundImage: `url(${character.image})` }}\n      aria-label={`Imagem do personagem ${character.name}`}>\n      <IconButton\n        className={styles.navigateBefore}\n        onClick={handleNavigateBack}\n        data-testid=\"navigate-back-button\"\n        aria-label=\"voltar para detalhes do personagem\">\n        <NavigateBefore />\n      </IconButton>\n    </div>\n  )\n}\n\nexport default EditHeader\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogActions from '@material-ui/core/DialogActions'\n\nimport styles from './styles.module.css'\n\nimport { editCharacter } from 'src/store/character/actions'\nimport { Character } from 'src/store/character/types'\n\ntype EditFieldsProps = {\n  className?: string\n  character: Character\n}\n\nconst EditFields = (props: EditFieldsProps) => {\n  const { className = '', character } = props\n  const classProps: string = `${styles.fields} ${className}`\n  const dispatch = useDispatch()\n  const [name, setName] = useState(character.name)\n  const [image, setImage] = useState(character.image)\n  const [description, setDescription] = useState(character.description)\n  const [isOpenDialog, setIsOpenDialog] = useState(false)\n\n  const onClick = () => {\n    dispatch(\n      editCharacter({\n        id: character.id,\n        name: name,\n        image: image,\n        description: description,\n        series: [],\n      }),\n    )\n    setIsOpenDialog(true)\n  }\n\n  const handleClose = () => {\n    setIsOpenDialog(false)\n  }\n\n  return (\n    <>\n      <form className={classProps}>\n        <TextField\n          className={styles.input}\n          disabled\n          id=\"character-id\"\n          inputProps={{\n            'data-testid': 'character-id',\n          }}\n          label=\"ID do Personagem\"\n          defaultValue={character.id}\n        />\n        <TextField\n          variant=\"filled\"\n          className={styles.input}\n          id=\"character-name\"\n          inputProps={{\n            'data-testid': 'character-name',\n          }}\n          label=\"Nome do Personagem\"\n          defaultValue={character.name}\n          onChange={e => setName(e.target.value)}\n        />\n        <TextField\n          variant=\"filled\"\n          className={styles.input}\n          id=\"character-image\"\n          inputProps={{\n            'data-testid': 'character-image',\n          }}\n          label=\"Imagem do Personagem\"\n          defaultValue={character.image}\n          onChange={e => setImage(e.target.value)}\n        />\n        <TextField\n          variant=\"filled\"\n          multiline\n          rows={4}\n          className={styles.input}\n          id=\"character-description\"\n          inputProps={{\n            'data-testid': 'character-description',\n          }}\n          label=\"Descrição do Personagem\"\n          defaultValue={character.description}\n          onChange={e => setDescription(e.target.value)}\n        />\n        <Button className={styles.button} onClick={onClick}>\n          Salvar\n        </Button>\n      </form>\n      <Dialog onClose={handleClose} aria-labelledby=\"save-success-dialog\" open={isOpenDialog}>\n        <DialogTitle id=\"save-success-dialog\">Salvo com sucesso!</DialogTitle>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default EditFields\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory, useParams, Redirect } from 'react-router-dom'\nimport { RootState } from 'src/store'\n\nimport styles from './styles.module.css'\n\nimport EditTemplate from 'src/components/templates/edit-template'\nimport EditHeader from 'src/components/molecules/edit-header'\nimport EditFields from 'src/components/molecules/edit-fields'\n\ntype EditPageParams = {\n  characterId: string\n}\n\nconst EditPage = () => {\n  const history = useHistory()\n  const params = useParams<EditPageParams>()\n  const characterId = parseInt(params.characterId)\n  const handleNavigateBack = (id: number, name: string) => {\n    history.push(`/characters/${id}/${name}/details`)\n  }\n  const character = useSelector((state: RootState) =>\n    state.characters.find(e => e.id === characterId),\n  )\n\n  if (!character) return <Redirect to=\"/\" />\n\n  return (\n    <div className={styles.page}>\n      <EditTemplate\n        editHero={\n          <EditHeader\n            character={character}\n            handleNavigateBack={() => handleNavigateBack(character.id, character.name)}\n          />\n        }\n        inputFields={<EditFields character={character} />}\n      />\n    </div>\n  )\n}\n\nexport default EditPage\n","import React from 'react'\n\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\n\nimport 'src/styles/styles.css'\n\nimport HomePage from 'src/pages/home-page'\nimport DetailsPage from 'src/pages/details-page'\nimport EditPage from 'src/pages/edit-page'\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/characters/:characterId/:characterName/details\" component={DetailsPage} />\n        <Route path=\"/characters/:characterId/:characterName/edit\" component={EditPage} />\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { StylesProvider } from '@material-ui/core/styles'\nimport { Provider } from 'react-redux'\n\nimport store from 'src/store'\n\nimport App from './App'\n\nReactDOM.render(\n  <StylesProvider injectFirst>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StylesProvider>,\n  document.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"styles_content__ncP-I\",\"infoGroup\":\"styles_infoGroup__3xHBA\",\"detailTitle\":\"styles_detailTitle__36Ofv\",\"detailInfo\":\"styles_detailInfo__2se1d\",\"text\":\"styles_text__3EG1U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__1m9u0\",\"img\":\"styles_img__1q2QQ\",\"title\":\"styles_title__mfQwQ\",\"expand\":\"styles_expand__1W7Oe\",\"onExpand\":\"styles_onExpand__1Cliz\",\"details\":\"styles_details__-DMYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fields\":\"styles_fields__2NzBd\",\"button\":\"styles_button__3mnol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"styles_searchBar__3a4V2\",\"container\":\"styles_container__Qbp9k\",\"logo\":\"styles_logo___m5Kp\",\"searchContainer\":\"styles_searchContainer__32VCF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__1lzFE\",\"actionArea\":\"styles_actionArea__3vblF\",\"image\":\"styles_image__3HOWS\",\"content\":\"styles_content__2GR6A\",\"name\":\"styles_name__2FjsQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"styles_loader__eP1Tx\",\"dot\":\"styles_dot__1ZJh2\",\"blink\":\"styles_blink___SYo5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__195el\",\"navigateBefore\":\"styles_navigateBefore__cZv8H\",\"editAttributes\":\"styles_editAttributes__12-SQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"styles_content__LWNUG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"styles_content__3i63O\",\"noCharacters\":\"styles_noCharacters__3dzQF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"styles_content__2j_36\",\"noSeries\":\"styles_noSeries__ttk4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__3V7ED\",\"navigateBefore\":\"styles_navigateBefore__bWhvo\",\"editAttributes\":\"styles_editAttributes__1tc_f\",\"detailTitle\":\"styles_detailTitle__1L-fx\",\"detailInfo\":\"styles_detailInfo__eGT-c\",\"text\":\"styles_text__28Kly\"};"],"sourceRoot":""}